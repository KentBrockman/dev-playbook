---
- name: "Check for in catalog: {{ app.name }}"
  delegate_to: localhost
  ansible.builtin.stat:
    # TODO: should be a safer way to do this
    path: "{{ role_path + '/defaults/' + app.name + '.yml' }}"
  register: app_yaml

- name: "Confirm in catalog: {{ app.name }}"
  ansible.builtin.assert:
    that:
      - app_yaml.stat.exists or app.name in catalog
    success_msg: "{{ app.name }} is in catalog"
    fail_msg: "{{ app.name }} does not appear to be in catalog.
    Please submit a PR to update the catalog.
    {{ catalog_url }}"

- name: "Load into catalog dict: {{ app.name }}"
  ansible.builtin.set_fact:
    catalog: "{{ catalog | combine(lookup('file', 'defaults/' + app.name + '.yml') | from_yaml) }}"
  when: app.name not in catalog

- name: "Confirm app is available from provider: {{ app.name }} from {{ app.provider }}" # noqa name[template]
  ansible.builtin.assert:
    that:
      - "app.provider in catalog.{{ app.name }}.providers"
    success_msg: "{{ app.name }} is available from {{ app.provider }}"
    fail_msg: "{{ app.name }} does not appear to be in catalog.
    Please submit a PR to update the catalog.
    {{ catalog_url }}"
  # executable will never be specific in the catalog of providers
  when: app.provider != "executable"

- name: "Install app from provider: {{ app.name }} from {{ app.provider }}" # noqa name[template]
  ansible.builtin.include_tasks: "{{ app.provider }}_install.yml"

- name: "Uninstall from other providers: {{ app.name }}"
  ansible.builtin.include_tasks: "{{ provider }}_uninstall.yml"
  when: provider != app.provider
  loop: "{{ catalog[app.name].providers | default({}) | dict2items | map(attribute='key') | list }}"
  loop_control:
    loop_var: provider

- name: "Uninstall executable: {{ app.name }}"
  ansible.builtin.include_tasks: "executable_uninstall.yml"
  when: app.provider != "executable"
