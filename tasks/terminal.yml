---
- name: Install terminal related packages
  become: true
  ansible.builtin.apt:
    pkg:
      # better shell and helper methods
      - zsh
      - zsh-autosuggestions
      # terminal multiplexer
      - tmux
      # cli text editor
      - vim
      # use clipboard from terminal
      - xclip
      # great fuzzy finder utility
      - fzf
      # nice grep replacement
      - ripgrep
      # cat/less upgrade with syntax highlighting
      - bat
      # JSON formatter
      - jq
      # show example usage of commands
      - tldr
      # nicer ping too
      - prettyping
      # show directory structure as indented tree
      - tree

- name: Install oh-my-zsh
  ansible.builtin.git:
    repo: https://github.com/robbyrussell/oh-my-zsh.git
    dest: ~/.oh-my-zsh

- name: Set permissions on .oh-my-zsh directories for security
  ansible.builtin.file:
    path: "{{ item.path }}"
    recurse: "{{ item.recurse }}"
    mode: g-w,o-w
  with_items:
    - path: "{{ ansible_facts.env.HOME }}/.oh-my-zsh"
      recurse: false
    - path: "{{ ansible_facts.env.HOME }}/.oh-my-zsh/plugins"
      recurse: true
    - path: "{{ ansible_facts.env.HOME }}/.oh-my-zsh/cache"
      recurse: false

- name: Confirm preferred shell executable is installed
  ansible.builtin.stat:
    path: "{{ preferred_shell }}"
  register: preferred_shell_executable

- name: Install starship
  # BUG: andrewrothstein.unarchive_deps tries to install xz, which doesn't exist
  # Hypothesis: Pop!_OS not detected as a Debian-based OS so vars/Debian.yml is not used
  # Instead, the xz package from defaults/main.yml is instead. xz doesn't exist on debian
  # Set it manually instead
  vars:
    unarchive_deps_xz_pkgs:
      - xz-utils
  ansible.builtin.import_role:
    name: andrewrothstein.starship

- name: Install starship config
  ansible.builtin.file:
    src: "{{ dev_playbook_directory }}/files/dotfiles/starship.toml"
    dest: "~/.config/starship.toml"
    # symlink so improvements to any dotfile can be source controlled easily
    state: link

- name: Set preferred shell for user
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    shell: "{{ preferred_shell }}"
  when: preferred_shell_executable.stat.exists

- name: Ensure local font directory exists
  ansible.builtin.file:
    name: ~/.local/share/fonts
    state: directory

- name: Install custom fonts
  ansible.posix.synchronize:
    src: files/fonts/
    dest: ~/.local/share/fonts/

- name: Setup root shell
  tags:
    - root-shell
  ansible.builtin.import_tasks: tasks/root-shell.yml

# TODO: figure out why i put this here again?
- name: Link python executables
  tags:
    - link-python
  ansible.builtin.include_tasks: tasks/link-python.yml
  with_items:
    - src: /usr/bin/python3
      dest: ~/.local/bin/python
    - src: /usr/bin/pip3
      dest: ~/.local/bin/pip

- name: Install python dev tools
  ansible.builtin.pip:
    name:
      # rerun commands as files change. super handy
      - rerun
