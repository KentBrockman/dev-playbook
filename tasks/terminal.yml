---
- name: install terminal related packages
  become: true
  apt:
    pkg:
      # better shell and helper methods
      - zsh
      - zsh-autosuggestions
      # terminal multiplexer
      - tmux
      # cli text editor
      - vim
      # use clipboard from terminal
      - xclip
      # great fuzzy finder utility
      - fzf
      # BUG: The ubuntu package repository mucks up how it handles rust packages (ripgrep + batcat)
      # need to apply this workaround manually to avoid this step producing an error
      # https://bugs.launchpad.net/ubuntu/+source/rust-bat/+bug/1868517/comments/32
      # nice grep replacement
      - ripgrep
      # cat/less upgrade with syntax highlighting
      - bat
      # JSON formatter
      - jq
      # show example usage of commands
      - tldr
      # nicer ping too
      - prettyping
      # show directory structure as indented tree
      - tree

- name: Install oh-my-zsh
  git:
    repo: https://github.com/robbyrussell/oh-my-zsh.git
    dest: ~/.oh-my-zsh

- name: confirm preferred shell executable is installed
  stat:
    path: "{{ preferred_shell }}"
  register: preferred_shell_executable

- name: install starship
  # BUG: andrewrothstein.unarchive_deps tries to install xz, which doesn't exist
  # Hypothesis: Pop!_OS not detected as a Debian-based OS so vars/Debian.yml is not used
  # Instead, the xz package from defaults/main.yml is instead. xz doesn't exist on debian
  # Set it manually instead
  vars:
    unarchive_deps_xz_pkgs:
      - xz-utils
  import_role:
    name: andrewrothstein.starship

- name: install starship config
  file:
    src: "{{ playbook_dir }}/files/dotfiles/starship.toml"
    dest: "~/.config/starship.toml"
    # symlink so improvements to any dotfile can be source controlled easily
    state: link

- name: set preferred shell for user
  become: true
  user:
    name: "{{ ansible_user_id }}"
    shell: "{{ preferred_shell }}"
  when: preferred_shell_executable.stat.exists

- name: ensure local font directory exists
  file:
    name: ~/.local/share/fonts
    state: directory

- name: install custom fonts
  synchronize:
    src: files/fonts/
    dest: ~/.local/share/fonts/

- name: setup root shell
  tags: ['root-shell']
  import_tasks: tasks/root-shell.yml

- name: link python executables
  tags: ['link-python']
  import_tasks: tasks/link-python.yml

- name: install python dev tools
  pip:
    name:
      # rerun commands as files change. super handy
      - rerun
